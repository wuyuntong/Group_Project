---
title: "Untitled"
format: html
editor: visual
author: Yuntong Wu & Jiaxin Shen
execute: 
  keep-md: true
---

## Links

Github link: <https://github.com/wuyuntong/Group_Project>

Data Source links:

Health data (2021 CHR CSV Analytic Data): <https://www.countyhealthrankings.org/explore-health-rankings/rankings-data-documentation>

COVID data (cases & deaths): <https://usafacts.org/visualizations/coronavirus-covid-19-spread-map/>

Social-economic data (poverty, unemployment, education, & population): <https://www.ers.usda.gov/data-products/county-level-data-sets/county-level-data-sets-download-data/>

## Description of data sources

1.Health data: The file analytic_data2021 comes from the County Health Rankings & Roadmaps (CHR&R). County Health Rankings & Roadmaps (CHR&R) is a program of the University of Wisconsin Population Health Institute. The CHR&R program provides data, evidence, guidance, and examples to build awareness of the multiple factors that influence health and support leaders in growing community power to improve health equity.

This file provides various health-related indicators for U.S. counties in 2021, including health behaviors, clinical care, as well as social and economic factors. Our focus is on six specific variables---Adult smoking, Adult obesity, Food environment index, Physical inactivity, Excessive drinking, Uninsured. We aim to investigate the correlation between these health metrics and COVID-19 numbers, seeking insights into the interplay between various factors and the pandemic's impact on communities.

2.COVID data: The files covid_confirmed_usafacts and covid_deaths_usafacts come from USAFacts. USAFacts currently counts presumptive positive cases as confirmed cases, as this is in line with how the CDC reports data. For deaths, USAFacts only takes those from state and local agencies if the virus played a direct role in causing death.

These two files provide daily cumulative data on confirmed cases and deaths attributed to the pandemic, organized by county in the United States spanning from January 2020 to July 2023. Notably, there are some cases counted at the state level are not allocated to counties due to lack of information. We select the number at the end of each month as monthly data to make it more intuitive and representative. The COVID confirmed cases number and COVID death number are the target variables of our analysis.

3.Social-economic data: These four files Education, PopulationEstimates, PovertyEstimates and Unemployment come from USDA's & Economic Research Service, which anticipate trends and emerging issues in agriculture, food, the environment, and rural America and to conduct high-quality, objective economic research to inform and enhance public and private decision making.

The Education dataset comes from multiple programs, including US Census Bureau and American Community Service. This file provides the basic information on the educational attainment of counties in the United States from 2017 to 2021. We focus on the variable, number of people having bachelor's degree or above, in this dataset.

PopulationEstimates are from U.S. Census Bureau for 1990, 2000, 2010, and 2020 Censuses of Population, and and Population Estimates Program (PEP). We select population and total deaths for analysis.

PovertyEstimates are model-based estimates from the U.S. Census Bureau's Small Area Income and Poverty Estimate (SAIPE) program. For counties and states, the program models income and poverty estimates by combining survey data with population estimates and administrative records. The data file file includes the estimated statistics of counties in the United States in 2021. The number of people of all ages in poverty 2021 and median income are selected for analysis.

The county and State unemployment rates are from the Bureau of Labor Statistics (BLS) Local Area Unemployment Statistics (LAUS) program. The Local Area Unemployment Statistics (LAUS) program is a federal-state cooperative effort in which monthly estimates of total employment and unemployment are prepared for over 7,600 areas. This file includes overall employment status by county in the United States from 2000 to 2022. Median household is from the U.S. Census Bureau's Small Area Income and Poverty Estimate (SAIPE) program as in the previous dataset. The number of unemployed for each county is selected for this study.

## Description of variables

Below is the description of variables that are used in the project after modification. For other variables, we refer interested readers to the data sources.

countyFIPS: Federal Information Processing Standard (FIPS) Code.

State: State abbreviation.

County Name: county names.

cases_mon: containing cumulative COVID-19 confirmed cases number at the end of each month from July 2020 to June 2021.

deaths_mon: containing cumulative COVID-19 death number at the end of each month from July 2020 to June 2021.

Smoke: Percentage of adults who are current smokers (age-adjusted).

Obesity: Percentage of the adult population (age 20 and older) that reports a body mass index (BMI) greater than or equal to 30 kg/m2.

Food environment index: Index of factors that contribute to a healthy food environment, from 0 (worst) to 10 (best).

Physical inactivity: Percentage of adults age 20 and over reporting no leisure-time physical activity.

Drinking: Percentage of adults reporting binge or heavy drinking (age-adjusted).

Uninsured: Percentage of population under age 65 without health insurance.

Poverty: Percentage of estimated number of people of all ages in poverty 2021.

Unemployed: Percentage of unemployment in 2021.

Population: 4/1/2020 resident Census 2020 population.

Median Income: Estimate of median household income in 2021.

Total Deaths: Percentage of death number in period 7/1/2020 to 6/30/2021.

Higher Education: Percentage of adults with a bachelor's degree or higher, 2017-21.

## Description of data cleaning and joining

For COVID cases and deaths datasets, we formatted the county FIPS code such that it is a 5-digit string. The FIPS for statewide unallocated cases and deathes is assigned a new value "99999". Variables important to the study(countyFIPS, County Name, State, StateFIPS and the numbers at the end of each month from Jul 2020 to June 2021) are reserved. After that, the case and death numbers are renamed corresponding to each month. A new row for US representing the nationwide cases and deaths is added.

For social-economic datasets, we keep only the countyFIPS and variables mentioned in the section of variable description. For health dataset, we merged county FIPS and state FIPS such that the FIPS code is line with other datasets. The variables for study are selected and are changed from the string type to numeric. Almost all the columns are complete, with no missing values.

For each one of cases and deaths, we join them by the primary key countyFIPS with the rest of the pre-processed datasets. Missing values are deleted. The resulting final ones are cases_f and deaths_f. These two datasets are used for clustering and regression tasks.

## Research question

The COVID-19 crisis has wreaked havoc on the world economy and people's lives. In US, the impact has been staggering, with nearly 100 million people contracting the virus and over 1 million died of it as of mid-July, as reported by USAfacts. From cities to rural towns, it is important for policymakers to stay informed how COVID-19 is spreading and affects families, commerce, and travel to take measures. Our focus on this project is on scrutinizing COVID-19 data at the county level in the US from July 2020 to June 2021---a period marked by the peak severity of the pandemic and the coexistence of various policies. With the project, we aim to gain an understanding of how different factors and policies played a role during the pandemic.

First, our focus revolves around understanding the dynamics of the pandemic's progression within the US. It is crucial to delve into the data and find out whether there are tangible variations in the trends at some critical moments. For instance, we want to detect if there is a structural shift in the data following the implementation of policies to contain the spread of the virus. Also, we want to see if there is a dramatic increase in the confirmed cases or deaths during the outbreak of a new virus variant and how these numbers change as time goes by.

Furthermore, recognizing that states are different in various manners, our analysis seeks to uncover patterns of COVID cases and deaths that may be influenced by these differences. Our investigation extends to labeling the counties using the available characteristics. This could be done by using clustering techniques, such that counties with similar characteristics could be categorized into a group and others with disparate characteristics could be categorized into separate groups.

Lastly, this project also incorporates a nationwide exploration of the covariates that may have impacted the transmission of the virus. The recent study by Almalki et al. (2022) analyzed the cases and death numbers in Guilford County and found that food access and health issues are correlated with COVID cases and deaths by 0.44% and 60%, respectively. In a similar fashion, we consider a larger pool of factors including unemployment, poverty rate, income level, insurance coverage, alcohol abuse, heavy smoking, etc. By delving into these factors, we want to find out the influences that contribute to the number of deaths and infected cases on a broader scale. The intended approach for use is leveraging the linear regression model, and we will evaluate how the model works with its forecasting accuracy.

### References

Almalki A, Gokaraju B, Acquaah Y, Turlapaty A (2022) Regression analysis for COVID-19 infections and deaths based on food access and health issues. Healthcare 10(2):324.

```{r, echo=FALSE}
here::i_am("Group_Project.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
library(stringr)
library(factoextra)
library(hopkins)
library(forecast)
library(lubridate)
library(tseries)
set.seed(123)
theme_set(theme_bw())
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,message=FALSE, warning = FALSE)
```

```{r, echo=FALSE, message=FALSE}
health <- vroom(here("data", "analytic_data2021.csv"))
cases <- vroom(here("data", "covid_confirmed_usafacts.csv"))
deaths <- vroom(here("data", "covid_deaths_usafacts.csv"))
edu <- vroom(here("data", "Education.csv"))
pop <- vroom(here("data", "PopulationEstimates.csv"))
pov <- vroom(here("data", "PovertyEstimates.csv"))
ump <- vroom(here("data", "Unemployment.csv"))
```

## Basic information about the data files

```{r, echo=FALSE}
info <- function(df) {
  data.frame(file_name = deparse(substitute(df)), row_number = nrow(df), col_number = ncol(df), missing_number = sum(is.na(df))) |> knitr::kable()
}
```

```{r, echo=FALSE}
info(health)
```

```{r, echo=FALSE}
info(cases)
```

```{r, echo=FALSE}
info(deaths)
```

```{r, echo=FALSE}
info(edu)
```

```{r, echo=FALSE}
info(pop)
```

```{r, echo=FALSE}
info(pov)
```

```{r, echo=FALSE}
info(ump)
```

## Data cleaning

```{r, echo=FALSE}
cov_clean <- function(df) {
  df$countyFIPS <- df$countyFIPS |>
    as.character() |>
    str_pad(5, pad = "0")

  df$countyFIPS <- ifelse(df$`County Name` == "Statewide Unallocated", "99999", df$countyFIPS)

  df <- df |>
    select(
      countyFIPS, `County Name`, State, StateFIPS,
      `2020-07-31`, `2020-08-31`, `2020-09-30`, `2020-10-31`,
      `2020-11-30`, `2020-12-31`, `2021-01-31`, `2021-02-28`,
      `2021-03-31`, `2021-04-30`, `2021-05-31`, `2021-06-30`
    ) |>
    rename(
      `2020-07` = `2020-07-31`,
      `2020-08` = `2020-08-31`,
      `2020-09` = `2020-09-30`,
      `2020-10` = `2020-10-31`,
      `2020-11` = `2020-11-30`,
      `2020-12` = `2020-12-31`,
      `2021-01` = `2021-01-31`,
      `2021-02` = `2021-02-28`,
      `2021-03` = `2021-03-31`,
      `2021-04` = `2021-04-30`,
      `2021-05` = `2021-05-31`,
      `2021-06` = `2021-06-30`
    )

  US <- data.frame(
    countyFIPS = "00000",
    `County Name` = "United States",
    State = NA,
    StateFIPS = NA,
    `2020-07` = NA,
    `2020-08` = NA,
    `2020-09` = NA,
    `2020-10` = NA,
    `2020-11` = NA,
    `2020-12` = NA,
    `2021-01` = NA,
    `2021-02` = NA,
    `2021-03` = NA,
    `2021-04` = NA,
    `2021-05` = NA,
    `2021-06` = NA,
    check.names = FALSE
  )

  df <- bind_rows(US, df)
}
```

```{r, echo=FALSE}
cases_mon <- cov_clean(cases)
deaths_mon <- cov_clean(deaths)
```

```{r, echo=FALSE}
edu_c <- edu |>
  select(`Federal Information Processing Standard (FIPS) Code`, `Bachelor's degree or higher, 2017-21`) |>
  rename(
    countyFIPS = `Federal Information Processing Standard (FIPS) Code`,
    `Higher Education` = `Bachelor's degree or higher, 2017-21`
  )
```

```{r, echo=FALSE}
pop_c <- pop |>
  select(FIPStxt, CENSUS_2020_POP, DEATHS_2021) |>
  rename(
    countyFIPS = FIPStxt,
    Population = CENSUS_2020_POP,
    `Total Deaths` = DEATHS_2021
  )
```

```{r, echo=FALSE}
pov_c <- pov |>
  select(FIPS_Code, POVALL_2021, MEDHHINC_2021) |>
  rename(
    countyFIPS = FIPS_Code,
    Poverty = POVALL_2021,
    `Median Income` = MEDHHINC_2021
  )
```

```{r, echo=FALSE}
ump_c <- ump |>
  select(FIPS_Code, Unemployed_2021) |>
  rename(
    countyFIPS = FIPS_Code,
    Unemployed = Unemployed_2021
  )
```

```{r, echo=FALSE}
health_c <- health[2:nrow(health), ] |>
  mutate(countyFIPS = paste(`State FIPS Code`, `County FIPS Code`, sep = "")) |>
  select(countyFIPS, `Adult smoking raw value`, `Adult obesity raw value`, `Food environment index raw value`, `Physical inactivity raw value`, `Excessive drinking raw value`, `Uninsured raw value`) |>
  rename(
    Smoke = `Adult smoking raw value`,
    Obesity = `Adult obesity raw value`,
    `Food Environment` = `Food environment index raw value`,
    `Physical inactivity` = `Physical inactivity raw value`,
    Drinking = `Excessive drinking raw value`,
    Uninsured = `Uninsured raw value`
  ) |>
  mutate(
    Smoke = as.numeric(Smoke),
    Obesity = as.numeric(Obesity),
    `Food Environment` = as.numeric(`Food Environment`),
    `Physical inactivity` = as.numeric(`Physical inactivity`),
    Drinking = as.numeric(Drinking),
    Uninsured = as.numeric(Uninsured)
  )
```

```{r, echo=FALSE}
cases_f <- cases_mon |>
  left_join(health_c, by = "countyFIPS") |>
  left_join(edu_c, by = "countyFIPS") |>
  left_join(pop_c, by = "countyFIPS") |>
  left_join(pov_c, by = "countyFIPS") |>
  left_join(ump_c, by = "countyFIPS") |>
  na.omit()

cases_f$`Higher Education` <- cases_f$`Higher Education` / cases_f$Population
cases_f$`Total Deaths` <- cases_f$`Total Deaths` / cases_f$Population
cases_f$Poverty <- cases_f$Poverty / cases_f$Population
cases_f$Unemployed <- cases_f$Unemployed / cases_f$Population


deaths_f <- deaths_mon |>
  left_join(health_c, by = "countyFIPS") |>
  left_join(edu_c, by = "countyFIPS") |>
  left_join(pop_c, by = "countyFIPS") |>
  left_join(pov_c, by = "countyFIPS") |>
  left_join(ump_c, by = "countyFIPS") |>
  na.omit()

deaths_f$`Higher Education` <- deaths_f$`Higher Education` / deaths_f$Population
deaths_f$`Total Deaths` <- deaths_f$`Total Deaths` / deaths_f$Population
deaths_f$Poverty <- deaths_f$Poverty / deaths_f$Population
deaths_f$Unemployed <- deaths_f$Unemployed / deaths_f$Population
```

## Graphic representation of target variables

```{r, echo=FALSE, warning=FALSE}
cases_mon |>
  group_by(State) |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  ggplot(aes(x = month, y = count, group = State, color = State)) +
  geom_line() +
  labs(title = "Total cases reported across all 50 states from July 2020 to June 2021") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(margin = margin(b = 40))
  )
```

```{r, echo=FALSE}
deaths_mon |>
  group_by(State) |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  ggplot(aes(x = month, y = count, group = State, color = State)) +
  geom_line() +
  labs(title = "Total deaths reported across all 50 states from July 2020 to June 2021") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(margin = margin(b = 40))
  )
```

```{r, echo=FALSE}
cases_mon |>
  group_by(State) |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  group_by(State) |>
  mutate_at(vars(count), list(~ .x - lag(.x))) |>
  na.omit() |>
  ggplot(aes(x = month, y = count, group = State, color = State)) +
  geom_line() +
  labs(title = "New cases reported across all 50 states from August 2020 to June 2021") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(margin = margin(b = 40))
  )
```

```{r, echo=FALSE}
deaths_mon |>
  group_by(State) |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  group_by(State) |>
  mutate_at(vars(count), list(~ .x - lag(.x))) |>
  na.omit() |>
  ggplot(aes(x = month, y = count, group = State, color = State)) +
  geom_line() +
  labs(title = "New deaths reported across all 50 states from August 2020 to June 2021") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(margin = margin(b = 40))
  )
```

```{r, echo=FALSE}
cases_mon |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  ggplot(aes(x = month, y = count, group = 1)) +
  geom_line() +
  labs(title = "Nationwide total cases reported from July 2020 to June 2021")
```

```{r, echo=FALSE}
deaths_mon |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  ggplot(aes(x = month, y = count, group = 1)) +
  geom_line() +
  labs(title = "Nationwide total deaths reported from July 2020 to June 2021")
```

```{r, echo=FALSE}
deaths_mon |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  ggplot(aes(x = month, y = count, group = 1)) +
  geom_line() +
  labs(title = "Nationwide total deaths reported from July 2020 to June 2021")
```

```{r, echo=FALSE}
cases_mon |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  mutate_at(vars(count), list(~ .x - lag(.x))) |>
  na.omit() |>
  ggplot(aes(x = month, y = count, group = 1)) +
  geom_line() +
  labs(title = "Nationwide new cases reported from August 2020 to June 2021")
```

```{r, echo=FALSE}
deaths_mon |>
  summarise(across(starts_with("202"), sum, na.rm = TRUE)) |>
  pivot_longer(cols = starts_with("202"), names_to = "month", values_to = "count") |>
  mutate_at(vars(count), list(~ .x - lag(.x))) |>
  na.omit() |>
  ggplot(aes(x = month, y = count, group = 1)) +
  geom_line() +
  labs(title = "Nationwide new deaths reported from August 2020 to June 2021")
```

## Time series analysis of national cases and deaths.
  We aim to identify the specific trends in cases and deaths across various regions in the United States over a certain period. We have selected the daily cumulative data from July 31, 2020, to June 30, 2021. Initially, by plotting graphs and conducting an ADF test, we found that the original data was not stationary. After performing a second differencing, we obtained a relatively stable dataset.ARIMA model has the advantages of simplicity and the ability to handle non-stationary sequences. Consequently, we chose the ARIMA model as the foundational model for analysis. The initial 80% of the data is used as the training set, and the remaining 20% is utilized as the test set.

### National cases
```{r}
national_cases <- cases |>
  select(starts_with("202"))|>
  summarise_all(sum, na.rm = TRUE)|>
  select(`2020-07-31`:`2021-06-30`) |>
  pivot_longer(everything(), names_to = "Date", values_to = "Cases")
```

```{r}
case_ts <- ts(national_cases$Cases)
plot.ts(case_ts,main = "Original data", xlab = "Cases", ylab = "Time")
plot.ts(diff(diff(case_ts)),main = "Second-order differenced data", ylab = "Second-order Differenced Cases", xlab = "Time")
adf.test(diff(diff(case_ts)))
```

  The test statistic is -9.1682 with a lag order of 6, resulting in a p-value of 0.01.With a p-value less than the significance level (commonly 0.05),the alternative hypothesis of stationarity is supported for the second-order differenced series.

```{r}
train_case <- case_ts[1:270]
test_case <- case_ts[271:335] |>
  ts(start = '271') 
model_case <- auto.arima(train_case)
checkresiduals(model_case)
summary(model_case)
plot(forecast(model_case,h=65))
lines(test_case,lwd=2,col='red')
```

### National deaths
```{r}
national_deaths <- deaths |>
  select(starts_with("202"))|>
  mutate(across(everything(), as.numeric))|>
  summarise_all(sum, na.rm = TRUE)|>  
  select(`2020-07-31`:`2021-06-30`) |>
  pivot_longer(everything(), names_to = "Date", values_to = "Deaths")
```

```{r}
death_ts <- ts(national_deaths$Deaths)
plot.ts(death_ts)
plot.ts(diff(diff(death_ts)))
```

```{r}
train_death <- death_ts[1:270]
test_death <- death_ts[271:335] |>
  ts(start = '271')
```

```{r}
model_death <- auto.arima(train_death)
checkresiduals(model_death)
summary(model_death)
plot(forecast(model_death,h=65))
lines(test_death,lwd=2,col='red')
```

### Relationship between national cases and deaths

  Besides examining the correlation between cases and deaths themselves, we also aim to determine if there is a significant relationship between cases and deaths. We opted for linear regression in this case. The results of the linear regression indicate a significant linear correlation between deaths and cases, implying that the virus's fatality rate is maybe a constant value, around 1.53%.
```{r}
national_data <- left_join(national_cases,national_deaths,'Date')
```

```{r}
c_relation <- lm(national_data$Deaths ~ national_data$Cases)
ggplot(national_data,aes(x = Cases, y = Deaths)) +
  geom_point(color = "blue") + 
  geom_abline(intercept = coef(c_relation)[1], slope = coef(c_relation)[2], color = "red") + 
  labs(x = "Cases", y = "Deats", title = "Linear Regression") +
  theme_minimal()
summary(c_relation)
```

## Clustering analysis

```{r, echo=FALSE}
col <- setdiff(names(cases_f), names(cases_mon))
df1 <- cases_f[, col]
df <- as.data.frame(scale(df1))
hop <- hopkins(df)
```

We prepare our dataset for clustering analysis, which involves the extraction of all variables, excluding both the number of cases and identification variables for each county. The dataset is standardized to remove the effect of scales on the clustering. We evaluate the validity of clustering by assessing its clustering tendency because the most clustering methods are not discriminating, meaning that even though the data are random uniformly distributed, it could also find some clustering patterns inside the dataset. We employ the Hopkins statistic, a measure probability that the dataset is generated by a uniform distribution. The null hypothesis suggesting a uniform distribution should indicate the value being close to 0.5. With a Hopkins statistic value of `r hop`, we reject the null hypothesis and conclude that the resulting dataset exhibits a high degree of clusterability.

Having established the dataset's suitability for clustering analysis, the subsequent task is to determine the optimal number of clusters for partitioning. This step commonly revolves around optimizing a statistical criterion. An approach involves utilizing the within-cluster sum of squares (WSS), which measures the compactness of resulting clusters---a smaller WSS value indicates a more cohesive clustering. The following figure illustrates the variation in WSS with respect to the number of clusters. While the graph does not display a distinct elbow pattern, we deem it is reasonable to select 4 clusters as the WSS value does not exhibit a substantial decrease beyond this point.

```{r, echo=FALSE}
fviz_nbclust(df, kmeans, method = "wss", nboot = 100) +
  geom_vline(xintercept = 4, linetype = 2) +
  labs(subtitle = "Elbow method")
```

We implement k-means clustering with a predetermined value of 4 for better understanding the underlying patterns in the data. As the data contain more than two variables, we use principal component analysis (PCA) to reduce the dimensionality and provide a scatter plot. As depicted in the 2-D cluster plot. The first principal component accounts for 44.4% of the total variation, while the second component explains an additional 12.8%. The scatter plot indicates the presence of 4 meaningful clusters within the dataset.

```{r, echo=FALSE}
km.res <- eclust(df, "kmeans", k = 4, nstart = 25, graph = FALSE)
fviz_cluster(km.res, geom = "point", ellipse.type = "norm",
             palette = "jco", ggtheme = theme_minimal())
```

The dataset is partitioned into 4 clusters, with each containing `r km.res$size[1]`, `r km.res$size[2]`, `r km.res$size[3]`, and `r km.res$size[3]` data points. These 4 clusters can be characterized by the distribution of the variables within each cluster. Cluster 3, in particular, has the lowest smoking rate, lowest obesity, highest food environment, lowest physical inactivity and insurance rate and becomes the healthiest out of the 4 although the drinking is a bit higher than others. It also has the most population, low total deaths, lowest poverty and highest median income and higher education rate. We therefore give it the label 'Healthiest, high-income big cities'. In contrast, cluster 2 performs the worst among the health indicators and social economic factors, and it has the least population. We thus gives it the label "Unhealthy, low-income small towns". For clusters 1 and 4, they both perform better than cluster 2 but not as well as cluster 3. On the other hand, cluster 4 outperforms cluster 1 in health indicators and social economic factors, therefore, we label cluster 1 as "Less healthy, low-to-middle-income, median cities" and cluster 4 as "Healthier, median-to-high-income, median cities". In addition, unemployment does not seem to be a discriminating factor as all resulting clusters maintain an unemployment rate around 20%. We also notice that excessive drinking is more related to healthier regions with more population and higher income.

```{r, echo=FALSE}
df1$Cluster <- km.res$cluster

df1_cl1 <- df1[df1$Cluster == 1,]
df1_cl2 <- df1[df1$Cluster == 2,]
df1_cl3 <- df1[df1$Cluster == 3,]
df1_cl4 <- df1[df1$Cluster == 4,]
clusters <- list(df1_cl1, df1_cl2, df1_cl3, df1_cl4)

tab <- matrix(data=NA, nrow=13, ncol=5)
tab[1,] <- c('', 'Cluster 1', 'Cluster 2', 'Cluster 3', 'Cluster 4')
tab[,1] <- c('', col)

for (i in c(1,2,3,4)) {
  cluster <- clusters[[i]]
  tab[2, 1+i] <- round(mean(cluster$Smoke), 2)
  tab[3, 1+i] <- round(mean(cluster$Obesity), 2)
  tab[4, 1+i] <- round(mean(cluster$`Food Environment`), 4)
  tab[5, 1+i] <- round(mean(cluster$`Physical inactivity`), 2)
  tab[6, 1+i] <- round(mean(cluster$Drinking), 2)
  tab[7, 1+i] <- round(mean(cluster$Uninsured), 2)
  tab[8, 1+i] <- round(mean(cluster$`Higher Education`), 2)
  tab[9, 1+i] <- round(mean(cluster$Population))
  tab[10, 1+i] <- round(mean(cluster$`Total Deaths`), 2)
  tab[11, 1+i] <- round(mean(cluster$Poverty), 2)
  tab[12, 1+i] <- round(mean(cluster$`Median Income`), 2)
  tab[13, 1+i] <- round(mean(cluster$Unemployed), 2)
}

knitr::kable(tab)
```
